#coding:utf-8
'''
@author: Axoford12
这个小程序呢实现我们经常玩的游戏'2048'
首先呢我们构造一个命令行版本；
'''
#来看看设计思路， 
#----------------------------------------------------------------------------
#Start>(Play(Up[W],Down[S],Left[a],Right[D])>Compute>AddNumbers>Score)>Exit.
#----------------------------------------------------------------------------

#操作咱定义一下吧
# 上 w
# 下 s
# 左 a
# 右 d
# 当然啦，我们也可以写  h j k l  用过 Linux的应该知道吧！
# 下面是显示的东西，看看2048这个游戏是个4*4矩阵，所以这里使用二维数组实现
# 为了能倒退到前一步，可以弄个栈stack是吧，，这个是题外话，
# Ok Let's do it ! 恩咱们做了她！(我说这句话是不是怪怪的。。)

# 先定义显示吧，为了能使用各种系统，用制表符，

mtr = [[0 for i in range(4)] for j in range(4)]
# 这个就是棋盘数据了
def T(a):
    return a if a else ' ' #为了让整体程序看起来美观一点点，，所以呢，，如果是0就不需要显示了
def display(mtr):
    print "┌"+("─"*5+"┬")*3+"─"*5+"┐"
    print "│%4s │%4s │%4s │%4s │"%(T(mtr[0][0]),T(mtr[0][1]),T(mtr[0][2]),T(mtr[0][3]))
    print "├"+("─"*5+"┼")*3+"─"*5+"┤"
    print "│%4s │%4s │%4s │%4s │"%(T(mtr[1][0]),T(mtr[1][1]),T(mtr[1][2]),T(mtr[1][3])) 
    print "├"+("─"*5+"┼")*3+"─"*5+"┤"
    print "│%4s │%4s │%4s │%4s │"%(T(mtr[2][0]),T(mtr[2][1]),T(mtr[2][2]),T(mtr[2][3]))
    print "├"+("─"*5+"┼")*3+"─"*5+"┤"
    print "│%4s │%4s │%4s │%4s │"%(T(mtr[3][0]),T(mtr[3][1]),T(mtr[3][2]),T(mtr[3][3]))
    print "└"+("─"*5+"┴")*3+"─"*5+"┘"
# 不懂的话 看看本目录的display.py这里解释了一下这个函数
# 好了，这样的话，就行了，，

# 测试一下，
#display(mtr)
# 看，打印了一个完美的表格，
# ┌─────┬─────┬─────┬─────┐
# │     │     │     │     │
# ├─────┼─────┼─────┼─────┤
# │     │     │     │     │
# ├─────┼─────┼─────┼─────┤
# │     │     │     │     │
# ├─────┼─────┼─────┼─────┤
# │     │     │     │     │
# └─────┴─────┴─────┴─────┘

# 先提交一次大家看看。